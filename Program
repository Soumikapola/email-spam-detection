#First, let's import the necessary libraries:

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score
#Next, let's load the dataset. For this example, I will use the spam dataset from the UCI Machine Learning Repository:


data = pd.read_csv('spam.csv', header=None)
data.columns = ['label', 'message']
#Then, let's preprocess the data by converting the text messages into a matrix of token counts:

vectorizer = CountVectorizer()
X = vectorizer.fit_transform(data['message'])
y = data['label']
#Now, let's split the data into training and testing sets:

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
#Next, let's train the Naive Bayes classifier on the training data:

clf = MultinomialNB()
clf.fit(X_train, y_train)
#Finally,let's evaluate the performance of the classifier on the testing data:

y_pred = clf.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
print('Accuracy: {:.2f}%'.format(accuracy * 100))
